Global:
 # Whether to train, evaluate or test
 do_train: True
 do_eval: False
 do_test: False
 # Number of training timesteps for diffusion scheduler
 num_train_timesteps: 1000

Trainer:
  # Max epochs to train
  max_epochs: 1000
  # Random seed
  seed: 42
  # Save path for checkpoints and logs
  output_dir: ./output/diffcsp_mp20_sample
  # Save frequency [epoch], for example, save_freq=10 means save checkpoints every 10 epochs
  save_freq: 100 # set 0 to disable saving during training
  # Logging frequency [step], for example, log_freq=10 means log every 10 steps
  log_freq: 10 # log frequency [step]

  # Start evaluation epoch, for example, start_eval_epoch=10 means start evaluation from epoch 10
  start_eval_epoch: 1
  # Evaluation frequency [epoch], for example, eval_freq=1 means evaluate every 1 epoch
  eval_freq: 1 # set 0 to disable evaluation during training
  # Pretrained model path, if null, no pretrained model will be loaded
  pretrained_model_path: output/diffcsp_mp20/checkpoints/best.pdparams # set your pretrained model path here
  # Resume from checkpoint path, useful for resuming training
  resume_from_checkpoint: null
  # whether use automatic mixed precision
  whether_use_amp: False
  # automatic mixed precision level
  amp_level: 'O1'

  # best metric indicator, you can choose from "train_loss", "eval_loss", "train_metric", "eval_metric"
  best_metric_indicator: 'eval_loss' # "train_loss", "eval_loss", "train_metric", "eval_metric"
  # The name of the best metric, since you may have multiple metrics, such as "mae", "rmse", "mape"
  name_for_best_metric: "loss"
  # The metric whether is better when it is greater
  greater_is_better: False

  # compute metric during training or evaluation
  whether_compute_metric_during_train: False # True: the metric will be calculated on train dataset
  metric_strategy_during_eval: 'step' # step or epoch, compute metric after step or epoch, if set to 'step', the metric will be calculated after every step, else after epoch


Model:
  __class_name__: DiffCSP
  __init_params__:
    decoder_cfg:
      hidden_dim: 512
      latent_dim: 256
      max_atoms: 100
      num_layers: 6
      act_fn: silu
      dis_emb: sin
      num_freqs: 128
      edge_style: fc
      max_neighbors: 20
      cutoff: 7
      ln: true
      ip: true
    lattice_noise_scheduler_cfg:
      __class_name__: DDPMScheduler
      __init_params__:
        beta_schedule: 'squaredcos_cap_v2'
        num_train_timesteps: ${Global.num_train_timesteps}
        clip_sample: False
    coord_noise_scheduler_cfg:
      __class_name__: ScoreSdeVeSchedulerWrapped
      __init_params__:
        num_train_timesteps:  ${Global.num_train_timesteps}
        sigma_min: 0.005
        sigma_max: 0.5
        snr: 1e-5
    num_train_timesteps: ${Global.num_train_timesteps}
    time_dim: 256
    lattice_loss_weight: 1
    coord_loss_weight: 1

Optimizer:
  __class_name__: Adam
  __init_params__:
    beta1: 0.9
    beta2: 0.999
    lr:
      __class_name__: ReduceOnPlateau
      __init_params__:
        learning_rate: 0.001
        factor: 0.6
        by_epoch: True
        patience: 30
        min_lr: 0.0001
        indicator: "train_loss"
        indicator_name: 'loss'

Dataset:
  train:
    dataset:
      __class_name__: MP20Dataset
      __init_params__:
        path: "./data/mp_20/train.csv"
        build_structure_cfg:
          format: cif_str
          num_cpus: 10
    loader:
      num_workers: 0
      use_shared_memory: False
    sampler:
      __class_name__: DistributedBatchSampler
      __init_params__:
        shuffle: True
        drop_last: False
        batch_size: 256
  eval:
    dataset:
      __class_name__: MP20Dataset
      __init_params__:
        path: "./data/mp_20/val.csv"
        build_structure_cfg:
          format: cif_str
          num_cpus: 10
    sampler:
      __class_name__: DistributedBatchSampler
      __init_params__:
        shuffle: False
        drop_last: False
        batch_size: 128
  test:
    dataset:
      __class_name__: MP20Dataset
      __init_params__:
        path: "./data/mp_20/test.csv"
        build_structure_cfg:
          format: cif_str
          num_cpus: 10
    sampler:
      __class_name__: DistributedBatchSampler
      __init_params__:
        shuffle: False
        drop_last: False
        batch_size: 128

Sample:
  data:
    dataset:
      __class_name__: MP20Dataset
      __init_params__:
        path: "./data/mp_20/test.csv"
        build_structure_cfg:
          format: cif_str
          num_cpus: 10
    sampler:
      __class_name__: DistributedBatchSampler
      __init_params__:
        shuffle: False
        drop_last: False
        batch_size: 10
  build_structure_cfg:
    format: array
    niggli: False

  metrics:
    __class_name__: CSPMetric
    __init_params__:
      gt_file_path: "./data/mp_20/test.csv"

  model_sample_params:
    num_inference_steps: 1000
